$offlisting
$offdigit

EQUATIONS
	eqs_1_
	eqs_2_
	eqs_3_
	eqs_4_
	eqs_5_
	f;

POSITIVE VARIABLES
	t_1_
	t_5_
	t_2_
	t_6_
	t_7_
	t_0_
	t_3_
	t_4_;

VARIABLES
	GAMS_OBJECTIVE
	;


eqs_1_.. power(t_1_, (-3))*(-0.12940000000000002) + power(t_5_, (-1))*(-0.105) + 1 =e= 0 ;
eqs_2_.. power(t_1_, 3)*power(t_2_, (-1))*t_6_*power(t_7_, (-1))*(-10.299999999999999) + power(t_2_, (-1))*power(t_7_, (-1))*(-1.2) + 1 =e= 0 ;
eqs_3_.. power(t_0_, (-1))*power(t_1_, 3)*(-4.6799999999999997) + power(t_0_, (-1))*power(t_1_, 2)*(-6.1299999999999999) + power(t_0_, (-1))*t_1_*(-1.605) + 1 =e= 0 ;
eqs_4_.. (-0.17900000000000002)*t_6_ + power(t_1_, 3)*power(t_5_, (-1))*t_6_*(-0.30199999999999999) + power(t_5_, (-1))*(-0.0357) + 1 =e= 0 ;
eqs_5_.. t_2_*t_3_ ** (-0.2)*t_4_ ** (-0.8)*t_7_*(-0.04856907480752663) + t_2_ ** 0.4*t_3_ ** (-0.42999999999999999)*t_7_*(-0.23052417218868185) + t_2_*power(t_3_, (-1))*t_7_*(-0.35999999999999999) + t_2_*power(t_4_, (-1))*t_7_*(-0.02) + (-0.04)*t_7_ + 1 =e= 0 ;
f.. GAMS_OBJECTIVE =e= t_0_ ** 0.782*0.045306661874419479 + 0.052250000000000005*t_1_ + t_1_ ** 0.9*0.1531862000665777 + power(t_1_, 3)*0.525 + t_5_ ** 0.467*0.1547490123646981 + t_2_ ** 1.33*t_3_ ** (-0.8)*0.19612882581198332 + t_3_ ** 0.546*0.12445990654786225 + t_2_ ** 2.85*t_3_ ** (-1.7)*0.0025910815708459485 + 0.0945*t_4_ + t_3_ ** (-1.8)*t_4_ ** 2.7999999999999998*0.0002662599617400149 + 11.600000000000001*t_5_ + t_5_*t_6_*(-2.0500000000000003) + power(t_1_, 3)*t_6_*(-2.7800000000000002) ;


MODEL GAMS_MODEL /all/ ;
option solprint=on;
option sysOut=on;
option threads=8;
option limrow=0;
option limcol=0;
option solvelink=5;
SOLVE GAMS_MODEL USING nlp minimizing GAMS_OBJECTIVE;

Scalars MODELSTAT 'model status', SOLVESTAT 'solve status';
MODELSTAT = GAMS_MODEL.modelstat;
SOLVESTAT = GAMS_MODEL.solvestat;

Scalar OBJEST 'best objective', OBJVAL 'objective value';
OBJEST = GAMS_MODEL.objest;
OBJVAL = GAMS_MODEL.objval;

Scalar NUMVAR 'number of variables';
NUMVAR = GAMS_MODEL.numvar

Scalar NUMEQU 'number of equations';
NUMEQU = GAMS_MODEL.numequ

Scalar NUMDVAR 'number of discrete variables';
NUMDVAR = GAMS_MODEL.numdvar

Scalar NUMNZ 'number of nonzeros';
NUMNZ = GAMS_MODEL.numnz

Scalar ETSOLVE 'time to execute solve statement';
ETSOLVE = GAMS_MODEL.etsolve

